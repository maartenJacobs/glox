package internal

import "fmt"

// WARNING: autogenerated file. Do not modify this file, other than to format.

type ExprVisitor interface {
	VisitBinary(Binary) (error, interface{})
	VisitGrouping(Grouping) (error, interface{})
	VisitLiteral(Literal) (error, interface{})
	VisitUnary(Unary) (error, interface{})
	VisitTernary(Ternary) (error, interface{})
}

type Expr interface {
	Visit(v ExprVisitor) (error, interface{})
}
type Binary struct {
	Left     Expr
	Operator Token
	Right    Expr
}

func (e Binary) Visit(v ExprVisitor) (error, interface{}) {
	return v.VisitBinary(e)
}

type Grouping struct {
	Expression Expr
}

func (e Grouping) Visit(v ExprVisitor) (error, interface{}) {
	return v.VisitGrouping(e)
}

type Literal struct {
	Value fmt.Stringer
}

func (e Literal) Visit(v ExprVisitor) (error, interface{}) {
	return v.VisitLiteral(e)
}

type Unary struct {
	Operator Token
	Right    Expr
}

func (e Unary) Visit(v ExprVisitor) (error, interface{}) {
	return v.VisitUnary(e)
}

type Ternary struct {
	Cond        Expr
	TrueBranch  Expr
	FalseBranch Expr
}

func (e Ternary) Visit(v ExprVisitor) (error, interface{}) {
	return v.VisitTernary(e)
}

type StmtVisitor interface {
	VisitExpression(Expression) (error, interface{})
	VisitPrint(Print) (error, interface{})
}

type Stmt interface {
	Visit(v StmtVisitor) (error, interface{})
}
type Expression struct {
	Expr *Expression
}

func (e Expression) Visit(v StmtVisitor) (error, interface{}) {
	return v.VisitExpression(e)
}

type Print struct {
	Expr Expression
}

func (e Print) Visit(v StmtVisitor) (error, interface{}) {
	return v.VisitPrint(e)
}
